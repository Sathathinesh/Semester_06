2. NumPy 
---------------------------------------------------------------------------------------------------------------------
2.1
>>> import numpy as np
>>> a=np.array([1,2,3])
>>> a.dtype
dtype('int32')
>>> a
array([1, 2, 3])
>>> matrix=np.array([np.arange(3),[i for i in range(1,4)],[6,7,8]])
>>> matrix
array([[0, 1, 2],
       [1, 2, 3],
       [6, 7, 8]])
---------------------------------------------------------------------------------------------------------------------
2.2
>> np.zeros((5,2,2))
array([[[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]]])
>>> np.zeros((5,2))
array([[0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.]])
>>> np.zeros((5,2,2),dtype=float)
array([[[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]]])
>>> np.zeros((5,2,2),dtype=float)
array([[[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]],

       [[0., 0.],
        [0., 0.]]])
>>> np.ones((4,5))
array([[1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.]])
>>> np.empty([3,4])
array([[ 4.45057637e-308,  1.78021527e-306,  8.45549797e-307,
         1.37962049e-306],
       [ 1.11260619e-306,  1.78010255e-306,  9.79054228e-307,
         4.45057637e-308],
       [ 8.45596650e-307,  9.34602321e-307,  4.94065646e-322,
        -1.59553196e+111]])
>>> np.arange(2,10,2)
array([2, 4, 6, 8])
>>> np.arange(2,10,1)
array([2, 3, 4, 5, 6, 7, 8, 9])
>>> 
>>> np.full([2,3],4)
array([[4, 4, 4],
       [4, 4, 4]])
>>> np.eye(3)
array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]])
>>> np.linspace(2,3,5)
array([2.  , 2.25, 2.5 , 2.75, 3.  ])
--------------------------------------------------------------------------------------------------------------------
2.3
>>> np.copy(matrix)
array([[0, 1, 2],
       [1, 2, 3],
       [6, 7, 8]])
>>> matrix.copy()
array([[0, 1, 2],
       [1, 2, 3],
       [6, 7, 8]])
>>> matrix.view()
array([[0, 1, 2],
       [1, 2, 3],
       [6, 7, 8]])
>>> matrix.sort()
>>> matrix
array([[0, 1, 2],
       [1, 2, 3],
       [6, 7, 8]])
>>> 
>>> matrix.sort(axis=1)
>>> matrix[0:,:1]
array([[0],
       [1],
       [6]])
>>> matrix[:2,0:2]
array([[0, 1],
       [1, 2]])
>>> matrix[:1,:]
array([[0, 1, 2]])
>>> 
-----------------------------------------------------------------------------------------------------------------------
Try Out 2.3.1

>>> matrix[1,0]
1
>>> matrix[0]=42
>>> matrix
array([[42, 42, 42],
       [ 1,  2,  3],
       [ 6,  7,  8]])
>>> matrix[1:3]
array([[1, 2, 3],
       [6, 7, 8]])
>>> matrix[]
SyntaxError: invalid syntax
>>> matrix[1:]
array([[1, 2, 3],
       [6, 7, 8]])
>>> matrix[1:100]
array([[1, 2, 3],
       [6, 7, 8]])
>>> matrix[:]
array([[42, 42, 42],
       [ 1,  2,  3],
       [ 6,  7,  8]])
>>> matrix[1:,:2]
array([[1, 2],
       [6, 7]])
>>> matrix[:2,1:]
array([[42, 42],
       [ 2,  3]])
>>> matrix.ravel()
array([42, 42, 42,  1,  2,  3,  6,  7,  8])
>>> matrix[:,1].copy()
array([42,  2,  7])
>>> matrix[1].tolist()
[1, 2, 3]
>>> matrix.reshape(-1)
array([42, 42, 42,  1,  2,  3,  6,  7,  8])
>>> 
---------------------------------------------------------------------------------------------------------------
Try Out 2.3.2

>>> np.sqrt(matrix)
array([[6.4807407 , 6.4807407 , 6.4807407 ],
       [1.        , 1.41421356, 1.73205081],
       [2.44948974, 2.64575131, 2.82842712]])
>>> np.exp(matrix)
array([[1.73927494e+18, 1.73927494e+18, 1.73927494e+18],
       [2.71828183e+00, 7.38905610e+00, 2.00855369e+01],
       [4.03428793e+02, 1.09663316e+03, 2.98095799e+03]])
>>> np.min(matrix)
1
>>> np.max(matrix)
42
>>> np.max(matrix,axis=1)
array([42,  3,  8])
>>> np.min(np.maximum(np.random.rand(4),np.random.rand(4)))
0.4744399735335978
>>> np.mean(matrix)
17.0
>>> np.mean(matrix,axis=0)
array([16.33333333, 17.        , 17.66666667])
>>> np.sum(matrix)
153
>>> np.invert(matrix)
array([[-43, -43, -43],
       [ -2,  -3,  -4],
       [ -7,  -8,  -9]], dtype=int32)
>>> np.random,randn(5)
Traceback (most recent call last):
  File "<pyshell#53>", line 1, in <module>
    np.random,randn(5)
NameError: name 'randn' is not defined
>>> np.random.randn(5)
array([ 0.05134445, -0.4764676 ,  0.08793528, -1.11308339,  1.20805207])
>>> np.trace(matrix)
52
>>> 
-------------------------------------------------------------------------------------------------------------------
import random
import numpy as np

def random_walk(n):
    x,y=0,0
    a=np.array([(0,1),(0,-1),(1,0),(-1,0)])
    for i in range(n):
        (dx,dy)=random.choice(a)
        x+=dx
        y+=dy
    return x,y

for i in range(10):
    walk = random_walk(500)
    print(walk)
	
---------------------------------------------------------------------------------------------------------------------	
